package toolbox.util.ui.explorer.action;

import java.awt.event.ActionEvent;
import java.io.File;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.io.find.FileFinder;
import org.apache.commons.io.find.FindEvent;
import org.apache.commons.io.find.FindListener;
import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;

import toolbox.util.ArrayUtil;
import toolbox.util.ui.explorer.JFileExplorer;

/**
 * DirPropertiesAction is responsible for displaying the selected directories
 * properties.
 */
public class DirPropertiesAction extends AbstractDirAction
{
    private static final Logger logger_ =
        Logger.getLogger(RenameDirAction.class);
    
    //--------------------------------------------------------------------------
    // Constructors
    //--------------------------------------------------------------------------
    
    /**
     * Creates a DirPropertiesAction.
     * 
     * @param explorer File explorer.
     */
    public DirPropertiesAction(JFileExplorer explorer)
    {
        super("Properties..", explorer);
        putValue(MNEMONIC_KEY, new Integer('P'));
    }

    //--------------------------------------------------------------------------
    // ActionListener Interface
    //--------------------------------------------------------------------------
    
    /**
     * @see java.awt.event.ActionListener#actionPerformed(
     *      java.awt.event.ActionEvent)
     */
    public void actionPerformed(ActionEvent e)
    {
        String path = 
            StringUtils.chomp(
                getExplorer().getCurrentPath(), 
                File.separator);

        File dir = new File(path);

        FileFinder finder = new FileFinder();
        Map options = new HashMap();
        //options.put(FileFinder.TYPE, "d");
        MyFindListener listener = new MyFindListener();
        finder.addFindListener(listener);
        File[] results = finder.find(dir , options);
        
        logger_.debug("Found      : " + results.length);
        logger_.debug("Total dirs : " + listener.getNumDirs());
        logger_.debug("Total files: " + listener.getNumFiles());
        logger_.debug("Total bytes: " + listener.getNumBytes());
        
        
        //logger_.debug(ArrayUtil.toString(results, true));
        
//        if (selected.isFile())
//        {
//            JFrame viewFrame = new JSmartFrame(selected.getAbsolutePath());
//            viewFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
//            
//            DocumentViewer viewer = new JEditViewer(selected.getName());
//            viewer.view(selected);
//            viewFrame.setContentPane(viewer.getComponent());
//            viewFrame.pack();
//            
//            SwingUtil.centerWindow(
//                SwingUtil.getFrameAncestor(getExplorer()),
//                viewFrame);
//            
//            viewFrame.setVisible(true);
//        }
    }
    
    //--------------------------------------------------------------------------
    // MyFindListener
    //--------------------------------------------------------------------------
    
    /**
     * Listens for events generated by the FileFinder and keeps track of file
     * statistics.
     */
    class MyFindListener implements FindListener
    {
        /**
         * Total number of accumulated bytes for all find found.
         */
        private int numBytes;
        
        /**
         * Total number of files found.
         */
        private int numFiles;
        
        /**
         * Total number of directories found.
         */
        private int numDirs; 

        //----------------------------------------------------------------------
        // Constructors
        //----------------------------------------------------------------------
        
        /**
         * Creates a MyFindListener.
         */
        public MyFindListener()
        {
            numBytes = 0;
            numFiles = 0;
            numDirs = 0;
        }
        
        //----------------------------------------------------------------------
        // FindListener Interface
        //----------------------------------------------------------------------
        
        /**
         * @see org.apache.commons.io.find.FindListener#fileFound(
         *      org.apache.commons.io.find.FindEvent)
         */
        public void fileFound(FindEvent findEvent)
        {
            File f = findEvent.getFile();
            numBytes += f.length();
            
            if (f.isFile())
                numFiles++;
            else if (f.isDirectory())
                numDirs++;
            else
                logger_.debug("Not counting " + f.getAbsolutePath());
        }
        
        
        /**
         * @see org.apache.commons.io.find.FindListener#directoryFinished(
         *      org.apache.commons.io.find.FindEvent)
         */
        public void directoryFinished(FindEvent findEvent)
        {
            // NOOP
        }


        /**
         * @see org.apache.commons.io.find.FindListener#directoryStarted(
         *      org.apache.commons.io.find.FindEvent)
         */
        public void directoryStarted(FindEvent findEvent)
        {
            numDirs++;
        }

        //----------------------------------------------------------------------
        // Public
        //----------------------------------------------------------------------
        
        public int getNumBytes()
        {
            return numBytes;
        }


        public int getNumDirs()
        {
            return numDirs;
        }


        public int getNumFiles()
        {
            return numFiles;
        }
    }
}