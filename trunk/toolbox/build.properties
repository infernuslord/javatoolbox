# ------------------------------------------------------------------------
# M A V E N  J A R  O V E R R I D E
# ------------------------------------------------------------------------

# Forces the following jars to be picked up from lib instead 
# of the Maven repository. This will result in errors at the start of
# each project build (something about the jar cannot be downloaded from
# the repository) but they are to be ignored. The errors can be muted
# by putting maven into offline mode using the -o flag.

maven.jar.override=on

maven.jar.debug=${basedir}/lib/debug.zip

maven.jar.acrobat=${basedir}/lib/acrobat.jar
maven.jar.ant=${basedir}/lib/ant.jar
maven.jar.apple-mrj=${basedir}/lib/apple-mrj.jar
maven.jar.avalon-framework=${basedir}/lib/avalon-framework.jar
maven.jar.batik=${basedir}/lib/batik.jar
maven.jar.bsh=${basedir}/lib/bsh.jar
maven.jar.commons-cli=${basedir}/lib/commons-cli.jar
maven.jar.commons-lang=${basedir}/lib/commons-lang.jar
maven.jar.commons-beanutils=${basedir}/lib/commons-beanutils.jar
maven.jar.commons-logging=${basedir}/lib/commons-logging.jar
maven.jar.commons-net=${basedir}/lib/commons-net.jar
maven.jar.commons-io=${basedir}/lib/commons-io.jar
maven.jar.commons-codec=${basedir}/lib/commons-codec.jar
maven.jar.commons-collections=${basedir}/lib/commons-collections.jar
maven.jar.cryptix32=${basedir}/lib/cryptix32.jar
maven.jar.cryptix32-pgp=${basedir}/lib/cryptix32-pgp.jar
maven.jar.cvslib=${basedir}/lib/cvslib.jar
maven.jar.fop=${basedir}/lib/fop.jar
maven.jar.hamsam=${basedir}/lib/hamsam.jar
maven.jar.hsqldb=${basedir}/lib/hsqldb.jar
maven.jar.jaimlib=${basedir}/lib/jaimlib.jar
maven.jar.jakarta-regexp=${basedir}/lib/jakarta-regexp.jar
maven.jar.jedit-syntax=${basedir}/lib/jedit-syntax.jar
maven.jar.jode=${basedir}/lib/jode.jar
maven.jar.junit=${basedir}/lib/junit.jar
maven.jar.kunststoff=${basedir}/lib/kunststoff.jar
maven.jar.log4j=${basedir}/lib/log4j.jar
maven.jar.metouia=${basedir}/lib/metouia.jar
maven.jar.plastic=${basedir}/lib/plastic.jar
maven.jar.saxon=${basedir}/lib/saxon.jar
maven.jar.statcvs=${basedir}/lib/statcvs.jar
maven.jar.sametime-comm=${basedir}/lib/sametime-comm.jar
maven.jar.sametime-comm-res=${basedir}/lib/sametime-comm-res.jar
maven.jar.skinlf=${basedir}/lib/skinlf.jar
maven.jar.tinylaf=${basedir}/lib/tinylaf.jar
maven.jar.xercesImpl=${basedir}/lib/xercesImpl.jar
maven.jar.xep=${basedir}/lib/xep.jar
maven.jar.xml-apis=${basedir}/lib/xml-apis.jar
maven.jar.xom=${basedir}/lib/xom.jar
maven.jar.xplookandfeel=${basedir}/lib/xplookandfeel.jar
maven.jar.xt=${basedir}/lib/xt.jar



# ------------------------------------------------------------------------
# T E S T
# ------------------------------------------------------------------------

# Forces each unit test to be run in its own process. This is turned on 
# because of some sort of Xerces conflict that surfaced when the tests
# were all run in the same JVM.
maven.junit.fork=yes

# Sends JUnit output to the console instead of a file
maven.junit.usefile=true

# Keeps from stopping the build if a JUnit test fails
maven.test.failure.ignore=true

# As part of the normal build process, Maven insists on running the JUnit
# tests when attaining the jar:install goal. Use this property to skips 
# over junit tests when not necessary. This must be set to false when
# building the continuous integration build or the deployment build.
maven.test.skip=false

# JUnit command line arguments when fork is set to true
#maven.junit.jvmargs=-Xbootclasspath/a:${basedir}/classes
#-Dlog4j.debug=true -Dlog4j.configuration=file:/c:/workspaces/workspace-head/build/conf/log4j.xml 

# ------------------------------------------------------------------------
#  C O M P I L E
# ------------------------------------------------------------------------

# Turn off checkstyle report
#maven.checkstyle.excludes=**/*.java

# Turns on verbose output from javac
maven.compile.verbose=off

# Tells Ant javac target to use Jikes
#build.compiler=jikes

# Forks compile tasks into a separate process
maven.compile.fork=true 

# Ignores compilation errors and continues the build. Must set to true
# for the continuous integration and deployment builds.
maven.compile.failonerror=true

# ------------------------------------------------------------------------
#  M U L T I P R O J E C T
# ------------------------------------------------------------------------

# Exclude statment that results in the build of all PWSW modules. This is
# the normal setting for the continuous integration build and the 
# deployment build. Make sure to *COMMENT OUT* maven.multiproject.includes
maven.multiproject.excludes=project.xml,**/build/**

# Use this to single out projects individual projects to be built. Handy 
# for debugging and experimenting with Maven without the baggage of the 
# entire build. Make sure to *COMMENT OUT* maven.multiproject.excludes
#maven.multiproject.includes=**/uiframework/project.xml,**/email/project.xml

# Ignores failures and continues the build regardless. This should be
# set to true for the continuous integration build and false for the
# deployment build.
maven.multiproject.ignoreFailures=true 

# ------------------------------------------------------------------------
# J A V A D O C
# ------------------------------------------------------------------------

# Instructs javadoc report to include non-public docs also
maven.javadoc.private=true

# ------------------------------------------------------------------------
# T A S K L I S T
# ------------------------------------------------------------------------

# Defines the text string in java source code that denotes TODO tasks 
# for the Maven TaskList report
#maven.tasklist.taskTag=TODO:
